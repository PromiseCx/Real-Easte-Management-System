{"remainingRequest":"D:\\WebStrom\\TestProject\\project\\06楼盘管理3\\webproject\\node_modules\\babel-loader\\lib\\index.js!D:\\WebStrom\\TestProject\\project\\06楼盘管理3\\webproject\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\WebStrom\\TestProject\\project\\06楼盘管理3\\webproject\\src\\mock\\services\\auth.js","dependencies":[{"path":"D:\\WebStrom\\TestProject\\project\\06楼盘管理3\\webproject\\src\\mock\\services\\auth.js","mtime":1587193627677},{"path":"D:\\WebStrom\\TestProject\\project\\06楼盘管理3\\webproject\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\WebStrom\\TestProject\\project\\06楼盘管理3\\webproject\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\WebStrom\\TestProject\\project\\06楼盘管理3\\webproject\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgTW9jayBmcm9tICdtb2NranMyJzsKaW1wb3J0IHsgYnVpbGRlciwgZ2V0Qm9keSB9IGZyb20gJy4uL3V0aWwnOwp2YXIgdXNlcm5hbWUgPSBbJ2FkbWluJywgJ3N1cGVyJ107IC8vIOW8uuehrOimgeaxgiBhbnQuZGVzaWduIOebuOWQjOWvhueggQovLyAnMjEyMzJmMjk3YTU3YTVhNzQzODk0YTBlNGE4MDFmYzMnLAoKdmFyIHBhc3N3b3JkID0gWyc4OTE0ZGU2ODZhYjI4ZGMyMmYzMGQzZDhlMTA3ZmY2YycsICcyMTIzMmYyOTdhNTdhNWE3NDM4OTRhMGU0YTgwMWZjMyddOwoKdmFyIGxvZ2luID0gZnVuY3Rpb24gbG9naW4ob3B0aW9ucykgewogIHZhciBib2R5ID0gZ2V0Qm9keShvcHRpb25zKTsKICBjb25zb2xlLmxvZygnbW9jazogYm9keScsIGJvZHkpOwoKICBpZiAoIXVzZXJuYW1lLmluY2x1ZGVzKGJvZHkudXNlcm5hbWUpIHx8ICFwYXNzd29yZC5pbmNsdWRlcyhib2R5LnBhc3N3b3JkKSkgewogICAgcmV0dXJuIGJ1aWxkZXIoewogICAgICBpc0xvZ2luOiB0cnVlCiAgICB9LCAn6LSm5oi35oiW5a+G56CB6ZSZ6K+vJywgNDAxKTsKICB9CgogIGNvbnNvbGUubG9nKGJ1aWxkZXIoewogICAgaWQ6IE1vY2subW9jaygnQGd1aWQnKSwKICAgIG5hbWU6IE1vY2subW9jaygnQG5hbWUnKSwKICAgIHVzZXJuYW1lOiAnYWRtaW4nLAogICAgcGFzc3dvcmQ6ICdhZG1pbicsCiAgICBhdmF0YXI6ICdodHRwczovL2d3LmFsaXBheW9iamVjdHMuY29tL3pvcy9ybXNwb3J0YWwvalpVSXhtSnljb3ltQnByTE9VYlQucG5nJywKICAgIHN0YXR1czogMSwKICAgIHRlbGVwaG9uZTogJycsCiAgICBsYXN0TG9naW5JcDogJzI3LjE1NC43NC4xMTcnLAogICAgbGFzdExvZ2luVGltZTogMTUzNDgzNzYyMTM0OCwKICAgIGNyZWF0b3JJZDogJ2FkbWluJywKICAgIGNyZWF0ZVRpbWU6IDE0OTcxNjA2MTAyNTksCiAgICBkZWxldGVkOiAwLAogICAgcm9sZUlkOiAnYWRtaW4nLAogICAgbGFuZzogJ3poLUNOJywKICAgIHRva2VuOiAnNDI5MWQ3ZGE5MDA1Mzc3ZWM5YWVjNGE3MWVhODM3ZicKICB9LCAnJywgMjAwLCB7CiAgICAnQ3VzdG9tLUhlYWRlcic6IE1vY2subW9jaygnQGd1aWQnKQogIH0pKTsKICByZXR1cm4gYnVpbGRlcih7CiAgICBpZDogTW9jay5tb2NrKCdAZ3VpZCcpLAogICAgbmFtZTogTW9jay5tb2NrKCdAbmFtZScpLAogICAgdXNlcm5hbWU6ICdhZG1pbicsCiAgICBwYXNzd29yZDogJ2FkbWluJywKICAgIGF2YXRhcjogJ2h0dHBzOi8vZ3cuYWxpcGF5b2JqZWN0cy5jb20vem9zL3Jtc3BvcnRhbC9qWlVJeG1KeWNveW1CcHJMT1ViVC5wbmcnLAogICAgc3RhdHVzOiAxLAogICAgdGVsZXBob25lOiAnJywKICAgIGxhc3RMb2dpbklwOiAnMjcuMTU0Ljc0LjExNycsCiAgICBsYXN0TG9naW5UaW1lOiAxNTM0ODM3NjIxMzQ4LAogICAgY3JlYXRvcklkOiAnYWRtaW4nLAogICAgY3JlYXRlVGltZTogMTQ5NzE2MDYxMDI1OSwKICAgIGRlbGV0ZWQ6IDAsCiAgICByb2xlSWQ6ICdhZG1pbicsCiAgICBsYW5nOiAnemgtQ04nLAogICAgdG9rZW46ICc0MjkxZDdkYTkwMDUzNzdlYzlhZWM0YTcxZWE4MzdmJwogIH0sICcnLCAyMDAsIHsKICAgICdDdXN0b20tSGVhZGVyJzogTW9jay5tb2NrKCdAZ3VpZCcpCiAgfSk7Cn07Cgp2YXIgbG9nb3V0ID0gZnVuY3Rpb24gbG9nb3V0KCkgewogIHJldHVybiBidWlsZGVyKHt9LCAnW+a1i+ivleaOpeWPo10g5rOo6ZSA5oiQ5YqfJyk7Cn07Cgp2YXIgc21zQ2FwdGNoYSA9IGZ1bmN0aW9uIHNtc0NhcHRjaGEoKSB7CiAgcmV0dXJuIGJ1aWxkZXIoewogICAgY2FwdGNoYTogTW9jay5tb2NrKCdAaW50ZWdlcigxMDAwMCwgOTk5OTkpJykKICB9KTsKfTsKCnZhciB0d29mYWN0b3IgPSBmdW5jdGlvbiB0d29mYWN0b3IoKSB7CiAgcmV0dXJuIGJ1aWxkZXIoewogICAgc3RlcENvZGU6IE1vY2subW9jaygnQGludGVnZXIoMCwgMSknKQogIH0pOwp9OwoKTW9jay5tb2NrKC9cL2F1dGhcL2xvZ2luLywgJ3Bvc3QnLCBsb2dpbik7Ck1vY2subW9jaygvXC9hdXRoXC9sb2dvdXQvLCAncG9zdCcsIGxvZ291dCk7Ck1vY2subW9jaygvXC9hY2NvdW50XC9zbXMvLCAncG9zdCcsIHNtc0NhcHRjaGEpOwpNb2NrLm1vY2soL1wvYXV0aFwvMnN0ZXAtY29kZS8sICdwb3N0JywgdHdvZmFjdG9yKTs="},{"version":3,"sources":["D:/WebStrom/TestProject/project/06楼盘管理3/webproject/src/mock/services/auth.js"],"names":["Mock","builder","getBody","username","password","login","options","body","console","log","includes","isLogin","id","mock","name","avatar","status","telephone","lastLoginIp","lastLoginTime","creatorId","createTime","deleted","roleId","lang","token","logout","smsCaptcha","captcha","twofactor","stepCode"],"mappings":"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","sourcesContent":["import Mock from 'mockjs2'\r\nimport { builder, getBody } from '../util'\r\n\r\nconst username = ['admin', 'super']\r\n// 强硬要求 ant.design 相同密码\r\n// '21232f297a57a5a743894a0e4a801fc3',\r\nconst password = ['8914de686ab28dc22f30d3d8e107ff6c', '21232f297a57a5a743894a0e4a801fc3']\r\nconst login = options => {\r\n    const body = getBody(options)\r\n    console.log('mock: body', body)\r\n    if (!username.includes(body.username) || !password.includes(body.password)) {\r\n        return builder({ isLogin: true }, '账户或密码错误', 401)\r\n    }\r\n    console.log(builder(\r\n        {\r\n            id: Mock.mock('@guid'),\r\n            name: Mock.mock('@name'),\r\n            username: 'admin',\r\n            password: 'admin',\r\n            avatar: 'https://gw.alipayobjects.com/zos/rmsportal/jZUIxmJycoymBprLOUbT.png',\r\n            status: 1,\r\n            telephone: '',\r\n            lastLoginIp: '27.154.74.117',\r\n            lastLoginTime: 1534837621348,\r\n            creatorId: 'admin',\r\n            createTime: 1497160610259,\r\n            deleted: 0,\r\n            roleId: 'admin',\r\n            lang: 'zh-CN',\r\n            token: '4291d7da9005377ec9aec4a71ea837f'\r\n        },\r\n        '',\r\n        200,\r\n        { 'Custom-Header': Mock.mock('@guid') }\r\n    ))\r\n    return builder(\r\n        {\r\n            id: Mock.mock('@guid'),\r\n            name: Mock.mock('@name'),\r\n            username: 'admin',\r\n            password: 'admin',\r\n            avatar: 'https://gw.alipayobjects.com/zos/rmsportal/jZUIxmJycoymBprLOUbT.png',\r\n            status: 1,\r\n            telephone: '',\r\n            lastLoginIp: '27.154.74.117',\r\n            lastLoginTime: 1534837621348,\r\n            creatorId: 'admin',\r\n            createTime: 1497160610259,\r\n            deleted: 0,\r\n            roleId: 'admin',\r\n            lang: 'zh-CN',\r\n            token: '4291d7da9005377ec9aec4a71ea837f'\r\n        },\r\n        '',\r\n        200,\r\n        { 'Custom-Header': Mock.mock('@guid') }\r\n    )\r\n}\r\n\r\nconst logout = () => {\r\n    return builder({}, '[测试接口] 注销成功')\r\n}\r\n\r\nconst smsCaptcha = () => {\r\n    return builder({ captcha: Mock.mock('@integer(10000, 99999)') })\r\n}\r\n\r\nconst twofactor = () => {\r\n    return builder({ stepCode: Mock.mock('@integer(0, 1)') })\r\n}\r\n\r\nMock.mock(/\\/auth\\/login/, 'post', login)\r\nMock.mock(/\\/auth\\/logout/, 'post', logout)\r\nMock.mock(/\\/account\\/sms/, 'post', smsCaptcha)\r\nMock.mock(/\\/auth\\/2step-code/, 'post', twofactor)\r\n"]}]}